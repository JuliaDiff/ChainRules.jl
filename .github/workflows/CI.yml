name: CI
on:
  push:
    branches: [master]
    tags: [v*]
  pull_request:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC (8 PM CST)

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.0'
          - '1'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x86
          - x64
        # 32-bit Julia binaries are not available on macOS
        exclude:
          - os: macOS-latest
            arch: x86
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
          parallel: true
          path-to-lcov: lcov.info

  finish:
    name: Coveralls Finished
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  slack:
    name: Notify Slack Failure
    needs: test
    runs-on: ubuntu-latest
    if: always() && github.event_name == 'schedule'
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - uses: voxmedia/github-action-slack-notify-build@v1
        if: env.WORKFLOW_CONCLUSION == 'failure'
        with:
          channel: nightly-rse
          status: FAILED
          color: danger
        env:
          SLACK_BOT_TOKEN: ${{ secrets.INVENIA_SLACK_BOT_TOKEN }}
